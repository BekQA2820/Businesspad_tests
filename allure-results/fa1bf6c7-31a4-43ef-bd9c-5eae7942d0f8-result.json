{"name": "test_process_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF7BA135305+78597]\n\tGetHandleVerifier [0x00007FF7BA135360+78688]\n\t(No symbol) [0x00007FF7B9EE91AA]\n\t(No symbol) [0x00007FF7B9F3F149]\n\t(No symbol) [0x00007FF7B9F3F3FC]\n\t(No symbol) [0x00007FF7B9F92467]\n\t(No symbol) [0x00007FF7B9F6712F]\n\t(No symbol) [0x00007FF7B9F8F2BB]\n\t(No symbol) [0x00007FF7B9F66EC3]\n\t(No symbol) [0x00007FF7B9F303F8]\n\t(No symbol) [0x00007FF7B9F31163]\n\tGetHandleVerifier [0x00007FF7BA3DEEBD+2870973]\n\tGetHandleVerifier [0x00007FF7BA3D9668+2848360]\n\tGetHandleVerifier [0x00007FF7BA3F6943+2967875]\n\tGetHandleVerifier [0x00007FF7BA15014A+188746]\n\tGetHandleVerifier [0x00007FF7BA15842F+222255]\n\tGetHandleVerifier [0x00007FF7BA13D284+111236]\n\tGetHandleVerifier [0x00007FF7BA13D432+111666]\n\tGetHandleVerifier [0x00007FF7BA123559+5465]\n\tBaseThreadInitThunk [0x00007FFC30617374+20]\n\tRtlUserThreadStart [0x00007FFC30A1CC91+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fc02fd526a0aeb1d142a73ee465e9d24\")>\n\n    def test_process_flow(driver):\n        wait = WebDriverWait(driver, 20)\n        with allure.step(\"1. Авторизация\"):\n            driver.get(\"https://finance.business-pad.com/\")\n            driver.find_element(By.ID, \":r0:\").send_keys(\"adminbp\")\n            driver.find_element(By.ID, \":r1:\").send_keys(\"AtVFpd3hFeEc\" + Keys.RETURN)\n            attach_screenshot(driver, \"После логина\")\n            time.sleep(1)\n        try:\n            with allure.step(\"Клик по иконке настроек\"):\n                # Ожидаем и кликаем по иконке Нстроек\n                settings_icon = wait.until(EC.element_to_be_clickable(\n                    (By.XPATH, '//*[@id=\"root\"]/div/div[1]/div/div/div[6]')))\n                driver.execute_script(\"\"\"\n                    arguments[0].style.opacity = '1';\n                    arguments[0].style.visibility = 'visible';\n                    arguments[0].style.pointerEvents = 'auto';\n                \"\"\", settings_icon)\n                ActionChains(driver) \\\n                    .move_to_element(settings_icon) \\\n                    .pause(0.3) \\\n                    .click() \\\n                    .perform()\n                attach_screenshot(driver, \"После клика по иконке настроек\")\n            with allure.step(\"Клик по 'Оргструктуре'\"):\n                # Ожидаем и кликаем по тексту\n                bp_list = wait.until(EC.element_to_be_clickable(\n                    (By.XPATH, '//*[@id=\"main\"]/div[2]/div/div[2]/div[7]/div/div/div[2]/a')))\n                # Двойной клик для надежности\n                ActionChains(driver) \\\n                    .move_to_element(bp_list) \\\n                    .pause(0.2) \\\n                    .click() \\\n                    .pause(0.1) \\\n                    .click() \\\n                    .perform()\n                attach_screenshot(driver, \"После клика по списку Оргструктуре\")\n        except Exception as e:\n            attach_screenshot(driver, \"Ошибка при выполнении действий\")\n            pytest.fail(f\"Ошибка при выполнении: {str(e)}\")\n        # Клик по трем точкам и выбор черновика\n        with allure.step(\"Кликнуть по кнопке меню (три точки)\"):\n            menu_button = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable(\n                    (By.CSS_SELECTOR, \"button.MuiButtonBase-root.MuiButton-root.MuiButton-textPrimary.css-1mut0en\")))\n            menu_button.click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"menu_clicked\",\n                          attachment_type=allure.attachment_type.PNG)\n        with allure.step(\"Выбрать 'Перейти к черновику'\"):\n            draft_option = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable((By.XPATH, \"//li[contains(., 'Перейти к черновику')]\"))\n            )\n            draft_option.click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"draft_selected\",\n                          attachment_type=allure.attachment_type.PNG)\n        # Клик по трем точкам руководителя и добавление 2х отделов!!!!!!!!!!!!!!!!!!\n        with allure.step(\"Кликнуть по кнопке меню (три точки) руководителя\"):\n            menu_button = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable((By.CSS_SELECTOR, \"button.css-1kg133f\")))\n            menu_button.click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"menu_clicked\",\n                          attachment_type=allure.attachment_type.PNG)\n        with allure.step(\"Добавление отделов\"):\n            draft_option = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable((By.XPATH, \"//li[contains(., 'Добавить отдел в подчинение')]\"))\n            )\n            draft_option.click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"draft_selected\",\n                          attachment_type=allure.attachment_type.PNG)\n        with allure.step(\"Кликнуть по кнопке меню (три точки) руководителя 2\"):\n            time.sleep(0.8)\n            menu_button = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable((By.CSS_SELECTOR, \"button.css-1kg133f\")))\n            menu_button.click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"menu_clicked\",\n                          attachment_type=allure.attachment_type.PNG)\n        with allure.step(\"Добавление отделов 2\"):\n            draft_option = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable((By.XPATH, \"//li[contains(., 'Добавить отдел в подчинение')]\"))\n            )\n            draft_option.click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"draft_selected\",\n                          attachment_type=allure.attachment_type.PNG)\n            # ПОДОТДЕЛЫ 1\n        with allure.step(\"Добавление отделов подотдела\"):\n            time.sleep(0.5)\n            buttons = driver.find_elements(By.CSS_SELECTOR, 'button.css-1kg133f')\n            # клик по второй кнопке (индекс 1)\n            buttons[1].click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"draft_selected\",\n                          attachment_type=allure.attachment_type.PNG)\n            element = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable(\n                    (\n                    By.XPATH, \"//li[contains(@class, 'MuiMenuItem-root') and contains(., 'Добавить отдел в подчинение')]\")))\n            element.click()\n            # Второй раз\n            time.sleep(0.5)\n            buttons = driver.find_elements(By.CSS_SELECTOR, 'button.css-1kg133f')\n            # клик по второй кнопке (индекс 1)\n            buttons[1].click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"draft_selected\",\n                          attachment_type=allure.attachment_type.PNG)\n            element = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable(\n                    (\n                    By.XPATH, \"//li[contains(@class, 'MuiMenuItem-root') and contains(., 'Добавить отдел в подчинение')]\")))\n            element.click()\n            # ПОДОТДЕЛЫ 2\n        with allure.step(\"Добавление отделов подотдела\"):\n            time.sleep(0.5)\n            buttons = driver.find_elements(By.CSS_SELECTOR, 'button.css-1kg133f')\n            # клик по второй кнопке (индекс 1)\n            buttons[2].click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"draft_selected\",\n                          attachment_type=allure.attachment_type.PNG)\n            element = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable(\n                    (\n                    By.XPATH, \"//li[contains(@class, 'MuiMenuItem-root') and contains(., 'Добавить отдел в подчинение')]\")))\n            element.click()\n        # редактирование!!!!!!!!!!!!!!!!!!!!!!!!!!!\n        #Подраздел2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n        with allure.step(\"Редактирование\"):\n            pane = driver.find_element(By.CSS_SELECTOR, \"div.react-flow__pane\")\n            ActionChains(driver).move_to_element_with_offset(pane, 100, 100).click().perform()\n            buttons = WebDriverWait(driver, 20).until(\n                EC.presence_of_all_elements_located(((By.CSS_SELECTOR, 'button.css-1kg133f'))))\n            # клик по второй кнопке (индекс 1)\n            buttons[2].click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"draft_selected\",\n                          attachment_type=allure.attachment_type.PNG)\n            element = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable(\n                    (By.XPATH, \"//li[contains(@class, 'MuiMenuItem-root') and contains(., 'Редактировать')]\")))\n            element.click()\n            element1 = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable((By.CSS_SELECTOR, \"button.MuiAccordionSummary-root\")))  # Клик по общему меню\n            element1.click()\n        with allure.step(\"Очистить поле 'Название отдела' и ввести 'Подраздел 2'\"):\n            input_field = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable((By.CSS_SELECTOR, \"input[name='name']\")))\n        # Кликаем, выделяем текст и удаляем\n        input_field.click()\n        input_field.send_keys(Keys.CONTROL + \"a\")  # Выделить всё (Windows/Linux)\n        input_field.send_keys(Keys.DELETE)  # Удалить\n        # Вводим новый текст\n        input_field.send_keys(\"Подраздел 2\")\n        input_field.send_keys(Keys.ENTER)\n        # Скриншот для отчета\n        allure.attach(\n            driver.get_screenshot_as_png(),\n            name=\"field_edited\",\n            attachment_type=allure.attachment_type.PNG)\n    \n        with allure.step(\"Кликнуть на 'Участники'\"):\n            with allure.step(\"Редактирование\"):\n                buttons = WebDriverWait(driver, 20).until(\n                    EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'button.css-1kg133f')))\n            # клик по второй кнопке (индекс 1)\n            buttons[2].click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"draft_selected\",\n                          attachment_type=allure.attachment_type.PNG)\n            element = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable(\n                    (By.XPATH, \"//li[contains(@class, 'MuiMenuItem-root') and contains(., 'Редактировать')]\")))\n            element.click()\n            element1 = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable((By.CSS_SELECTOR, \"button.MuiAccordionSummary-root\")))  # Клик по общему меню\n            element1.click()\n            element = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable((By.XPATH, \"//h6[contains(., 'Участники')]\")))\n        element.click()\n        button = WebDriverWait(driver, 20).until(\n            EC.element_to_be_clickable((By.XPATH, \"//button[contains(., 'Добавить')]\")))\n        button.click()\n        with allure.step(\"Выбираем из сотрудников Юлию\"):\n            element = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable((By.XPATH, \"/html/body/div/div/main/div[4]/div/div[2]/div/div[2]/div/div/div[1]/table/tbody/tr[4]/td[1]/div/div\"))\n            )\n        ActionChains(driver).move_to_element(element).click().perform()\n        with allure.step(\"Клик по последней кнопке 'Подтвердить'\"):\n            confirm_buttons = WebDriverWait(driver, 10).until(\n                EC.presence_of_all_elements_located((By.XPATH, \"//button[contains(., 'Подтвердить')]\"))\n            )\n        # Дополнительно проверяем, что последняя кнопка кликабельна\n        WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable(confirm_buttons[-1])\n        ).click()\n        #Подраздел1!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n        with allure.step(\"Редактирование\"):\n            time.sleep(1)\n            pane = driver.find_element(By.CSS_SELECTOR, \"div.react-flow__pane\")\n            ActionChains(driver).move_to_element_with_offset(pane, 110, 100).click().perform()\n            buttons = WebDriverWait(driver, 20).until(\n                EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'button.css-1kg133f')))\n            WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable(buttons[1])\n            ).click()\n            allure.attach(driver.get_screenshot_as_png(), name=\"draft_selected\",\n                          attachment_type=allure.attachment_type.PNG)\n>           element = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable(\n                    (By.XPATH, \"wwww//li[contains(@class, 'MuiMenuItem-root') and contains(., 'Редактировать')]\")))\n\nOrgstructure_test.py:225: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fc02fd526a0aeb1d142a73ee465e9d24\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000024E01FB19E0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7BA135305+78597]\nE       \tGetHandleVerifier [0x00007FF7BA135360+78688]\nE       \t(No symbol) [0x00007FF7B9EE91AA]\nE       \t(No symbol) [0x00007FF7B9F3F149]\nE       \t(No symbol) [0x00007FF7B9F3F3FC]\nE       \t(No symbol) [0x00007FF7B9F92467]\nE       \t(No symbol) [0x00007FF7B9F6712F]\nE       \t(No symbol) [0x00007FF7B9F8F2BB]\nE       \t(No symbol) [0x00007FF7B9F66EC3]\nE       \t(No symbol) [0x00007FF7B9F303F8]\nE       \t(No symbol) [0x00007FF7B9F31163]\nE       \tGetHandleVerifier [0x00007FF7BA3DEEBD+2870973]\nE       \tGetHandleVerifier [0x00007FF7BA3D9668+2848360]\nE       \tGetHandleVerifier [0x00007FF7BA3F6943+2967875]\nE       \tGetHandleVerifier [0x00007FF7BA15014A+188746]\nE       \tGetHandleVerifier [0x00007FF7BA15842F+222255]\nE       \tGetHandleVerifier [0x00007FF7BA13D284+111236]\nE       \tGetHandleVerifier [0x00007FF7BA13D432+111666]\nE       \tGetHandleVerifier [0x00007FF7BA123559+5465]\nE       \tBaseThreadInitThunk [0x00007FFC30617374+20]\nE       \tRtlUserThreadStart [0x00007FFC30A1CC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "steps": [{"name": "1. Авторизация", "status": "passed", "attachments": [{"name": "После логина", "source": "17eda405-ec5d-4d0f-97bb-ecbd8a59ad80-attachment.png", "type": "image/png"}], "start": 1745410355977, "stop": 1745410359643}, {"name": "Клик по иконке настроек", "status": "passed", "attachments": [{"name": "После клика по иконке настроек", "source": "5bcdcb47-b21f-4faa-84cc-bb986cfeeeb6-attachment.png", "type": "image/png"}], "start": 1745410359643, "stop": 1745410360534}, {"name": "Клик по 'Оргструктуре'", "status": "passed", "attachments": [{"name": "После клика по списку Оргструктуре", "source": "f130243f-cb72-41a3-9801-9d6867cffe43-attachment.png", "type": "image/png"}], "start": 1745410360534, "stop": 1745410361394}, {"name": "Кликнуть по кнопке меню (три точки)", "status": "passed", "attachments": [{"name": "menu_clicked", "source": "4f28a8e2-583d-4f3d-9d65-60872afabcdf-attachment.png", "type": "image/png"}], "start": 1745410361394, "stop": 1745410361860}, {"name": "Выбрать 'Перейти к черновику'", "status": "passed", "attachments": [{"name": "draft_selected", "source": "3e0f2ac2-79eb-4caa-88ee-c3467166e254-attachment.png", "type": "image/png"}], "start": 1745410361860, "stop": 1745410362175}, {"name": "Кликнуть по кнопке меню (три точки) руководителя", "status": "passed", "attachments": [{"name": "menu_clicked", "source": "20ded386-53ee-4eb0-84f0-ae8c2901dda6-attachment.png", "type": "image/png"}], "start": 1745410362175, "stop": 1745410362383}, {"name": "Добавление отделов", "status": "passed", "attachments": [{"name": "draft_selected", "source": "072a5087-fe97-4203-be89-fdcb5f313e07-attachment.png", "type": "image/png"}], "start": 1745410362383, "stop": 1745410362581}, {"name": "Кликнуть по кнопке меню (три точки) руководителя 2", "status": "passed", "attachments": [{"name": "menu_clicked", "source": "1fe7a484-e01b-42a6-a1f7-80ae1b6e7c9d-attachment.png", "type": "image/png"}], "start": 1745410362581, "stop": 1745410363596}, {"name": "Добавление отделов 2", "status": "passed", "attachments": [{"name": "draft_selected", "source": "104fb323-4f4f-482d-95e7-bca13188ccee-attachment.png", "type": "image/png"}], "start": 1745410363596, "stop": 1745410363811}, {"name": "Добавление отделов подотдела", "status": "passed", "attachments": [{"name": "draft_selected", "source": "5440f10b-a880-42e1-ab7e-52b22bfa2893-attachment.png", "type": "image/png"}, {"name": "draft_selected", "source": "8ad77b29-4039-4d56-bfbb-f0e1141de9c4-attachment.png", "type": "image/png"}], "start": 1745410363811, "stop": 1745410365358}, {"name": "Добавление отделов подотдела", "status": "passed", "attachments": [{"name": "draft_selected", "source": "8a5396e5-f33e-4da1-aa13-d37288e58a44-attachment.png", "type": "image/png"}], "start": 1745410365358, "stop": 1745410366142}, {"name": "Редактирование", "status": "passed", "attachments": [{"name": "draft_selected", "source": "325de2ef-6bfa-4019-869c-1eac1eadbd0c-attachment.png", "type": "image/png"}], "start": 1745410366142, "stop": 1745410367056}, {"name": "Очистить поле 'Название отдела' и ввести 'Подраздел 2'", "status": "passed", "start": 1745410367056, "stop": 1745410367587}, {"name": "Кликнуть на 'Участники'", "status": "passed", "steps": [{"name": "Редактирование", "status": "passed", "start": 1745410367973, "stop": 1745410367980}], "attachments": [{"name": "draft_selected", "source": "579979e2-db02-4adf-a3c8-b95c8f3cd925-attachment.png", "type": "image/png"}], "start": 1745410367973, "stop": 1745410368651}, {"name": "Выбираем из сотрудников Юлию", "status": "passed", "start": 1745410369311, "stop": 1745410369842}, {"name": "Клик по последней кнопке 'Подтвердить'", "status": "passed", "start": 1745410370140, "stop": 1745410370152}, {"name": "Редактирование", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF7BA135305+78597]\n\tGetHandleVerifier [0x00007FF7BA135360+78688]\n\t(No symbol) [0x00007FF7B9EE91AA]\n\t(No symbol) [0x00007FF7B9F3F149]\n\t(No symbol) [0x00007FF7B9F3F3FC]\n\t(No symbol) [0x00007FF7B9F92467]\n\t(No symbol) [0x00007FF7B9F6712F]\n\t(No symbol) [0x00007FF7B9F8F2BB]\n\t(No symbol) [0x00007FF7B9F66EC3]\n\t(No symbol) [0x00007FF7B9F303F8]\n\t(No symbol) [0x00007FF7B9F31163]\n\tGetHandleVerifier [0x00007FF7BA3DEEBD+2870973]\n\tGetHandleVerifier [0x00007FF7BA3D9668+2848360]\n\tGetHandleVerifier [0x00007FF7BA3F6943+2967875]\n\tGetHandleVerifier [0x00007FF7BA15014A+188746]\n\tGetHandleVerifier [0x00007FF7BA15842F+222255]\n\tGetHandleVerifier [0x00007FF7BA13D284+111236]\n\tGetHandleVerifier [0x00007FF7BA13D432+111666]\n\tGetHandleVerifier [0x00007FF7BA123559+5465]\n\tBaseThreadInitThunk [0x00007FFC30617374+20]\n\tRtlUserThreadStart [0x00007FFC30A1CC91+33]\n\n", "trace": "  File \"D:\\PythonProject\\Businesspad_tests\\Orgstructure_test.py\", line 225, in test_process_flow\n    element = WebDriverWait(driver, 20).until(\n              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        EC.element_to_be_clickable(\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            (By.XPATH, \"wwww//li[contains(@class, 'MuiMenuItem-root') and contains(., 'Редактировать')]\")))\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\PythonProject\\Businesspad_tests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "attachments": [{"name": "draft_selected", "source": "568b43d1-33fc-4a60-afdf-c47b3b5505b2-attachment.png", "type": "image/png"}], "start": 1745410370754, "stop": 1745410393050}], "attachments": [{"name": "field_edited", "source": "9eb50f48-e81c-4db9-95e9-0f9dc7683e4c-attachment.png", "type": "image/png"}], "start": 1745410355977, "stop": 1745410393075, "uuid": "1b24fa10-a253-454d-a284-cd418f8379fd", "historyId": "7fc646de1741085e43a40e6653633c56", "testCaseId": "7fc646de1741085e43a40e6653633c56", "fullName": "Orgstructure_test#test_process_flow", "labels": [{"name": "suite", "value": "Orgstructure_test"}, {"name": "host", "value": "DESKTOP-RNAREN4"}, {"name": "thread", "value": "11364-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Orgstructure_test"}]}